/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.ui;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import main.basedata.TollboothDataBase;
import main.business.ChargeManagement;
import main.maintain.BillManagement;
import main.maintain.CarManagement;
import main.maintain.EmployeeManagement;
import main.maintain.ParkSpaceManagement;
import main.maintain.TollboothMangement;

/**
 *
 * @author jiang_yq
 */
public class ParkFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -984108292545971893L;

	/**
	 * Creates new form ParkJFrame
	 */

	class SaveTask extends TimerTask {
		ParkFrame p;

		public SaveTask(ParkFrame p) {
			this.p = p;
		}

		public void run() {
			p.save();
		}
	}

	public ParkFrame() {
		/* Set the Metal look and feel */
		try {
			for (UIManager.LookAndFeelInfo info : UIManager
					.getInstalledLookAndFeels()) {
				if ("Metal".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (InstantiationException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (UnsupportedLookAndFeelException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
		getConfig();
		// maxEnteranceCount = 10;
		// maxExitCount = 10;
		// maxTollboothCount = 10;
		// enteranceCount = 1;
		// exitCount = 1;
		bManage = new BillManagement();
		carManage = new CarManagement();
		chargeManage = new ChargeManagement();
		eManage = new EmployeeManagement();
		pManage = new ParkSpaceManagement();
		tManage = new TollboothMangement();
		AddFrame = new AddEmptyBillFrame(bManage, pManage);
		BillManageFrame = new BillManagementFrame(bManage);
		carManageFrame = new CarManagementFrame(carManage);
		cScheduleFrame = new ChargeScheduleFrame(chargeManage);
		cScheduleFrame.setVisible(true);
		cScheduleManageFrame = new ChargeScheduleManagementFrame(chargeManage);
		cTimeManageFrame = new ChargeTimeManagementFrame(chargeManage);
		employeeManageFrame = new EmployeeManagementFrame(eManage);
		monthlyBillFrame = new MonthlyBillFrame();
		pSpaceManageFrame = new ParkSpaceManagementFrame(pManage);
		remainingFrame = new RemainingFrame(pManage);
		remainingFrame.setVisible(true);
		statsBillFrame = new StatsBillsFrame();
		tManageFrame = new TollboothManagementFrame(tManage);
		tFrame = new TollboothFrame[maxTollboothCount];
		List<TollboothDataBase> tl = tManage.getToolboothList();
		for (int i = 0; i < tl.size(); i++) {
			tFrame[i] = new TollboothFrame(tl.get(i), bManage, chargeManage);
			tFrame[i].setVisible(tl.get(i).getStat() == 1);
		}
		enterFrame = new EntranceFrame[maxEnteranceCount];
		for (int i = 0; i < maxEnteranceCount; i++) {
			enterFrame[i] = new EntranceFrame(i, bManage, pManage, carManage,
					chargeManage);
			if (i < enteranceCount)
				enterFrame[i].setVisible(true);
		}
		exitFrame = new ExitFrame[maxExitCount];
		for (int i = 0; i < maxExitCount; i++) {
			exitFrame[i] = new ExitFrame(i, pManage, bManage);
			if (i < exitCount)
				exitFrame[i].setVisible(true);
		}
		initComponents();
		jLabel_State.setText("Data Load Success!");
		t = new Timer();
		t.schedule(new SaveTask(this), 30000, 600000);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		managementPanel = new javax.swing.JPanel();
		jButtonEmployeeManagement = new javax.swing.JButton();
		jButtonTollboothManagement = new javax.swing.JButton();
		jButtonBillManagement = new javax.swing.JButton();
		jButtonChargeTimeManagement = new javax.swing.JButton();
		jButtonCarManagement = new javax.swing.JButton();
		jButtonParkSpaceManagement = new javax.swing.JButton();
		jButtonChargeScheduleManagement = new javax.swing.JButton();
		maintainPanel = new javax.swing.JPanel();
		jButton_StatsBill = new javax.swing.JButton();
		dataMaintainPanel = new javax.swing.JPanel();
		jButton_CollectCash = new javax.swing.JButton();
		jButton_EmptyBill = new javax.swing.JButton();
		monthlyBillPanel = new javax.swing.JPanel();
		jButton_MonthlyBill = new javax.swing.JButton();
		businessPanel = new javax.swing.JPanel();
		EnterancePanel = new javax.swing.JPanel();
		jButton_OpenNewEnterance = new javax.swing.JButton();
		jButton_CloseAllEnterance = new javax.swing.JButton();
		TollboothPanel = new javax.swing.JPanel();
		jButton_OpenAllTollbooth = new javax.swing.JButton();
		jButton_CloseAllTollbooth = new javax.swing.JButton();
		ExitPanel = new javax.swing.JPanel();
		jButton_OpenNewExit = new javax.swing.JButton();
		jButton_CloseAllExit = new javax.swing.JButton();
		statePanel = new javax.swing.JPanel();
		jToolBar1 = new javax.swing.JToolBar();
		jLabel_State = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		this.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				save();
			}
		});
		getContentPane().setLayout(new java.awt.GridBagLayout());

		managementPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Management"));
		managementPanel.setFont(managementPanel.getFont().deriveFont(
				managementPanel.getFont().getSize() + 2f));
		managementPanel.setLayout(new java.awt.GridBagLayout());

		jButtonEmployeeManagement.setText("Employee Management");
		jButtonEmployeeManagement
				.setFont(jButtonEmployeeManagement.getFont().deriveFont(
						jButtonEmployeeManagement.getFont().getSize() + 2f));
		jButtonEmployeeManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonEmployeeManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel.add(jButtonEmployeeManagement, gridBagConstraints);

		jButtonTollboothManagement.setText("Tollbooth Management");
		jButtonTollboothManagement
				.setFont(jButtonTollboothManagement.getFont().deriveFont(
						jButtonTollboothManagement.getFont().getSize() + 2f));
		jButtonTollboothManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonTollboothManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel.add(jButtonTollboothManagement, gridBagConstraints);

		jButtonChargeTimeManagement.setText("Time Management");
		jButtonChargeTimeManagement.setFont(jButtonChargeTimeManagement
				.getFont().deriveFont(
						jButtonChargeTimeManagement.getFont().getSize() + 2f));
		jButtonChargeTimeManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonChargeTimeManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel.add(jButtonChargeTimeManagement, gridBagConstraints);

		jButtonCarManagement.setText("Car Management");
		jButtonCarManagement.setFont(jButtonCarManagement.getFont().deriveFont(
				jButtonCarManagement.getFont().getSize() + 2f));
		jButtonCarManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonCarManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel.add(jButtonCarManagement, gridBagConstraints);

		jButtonParkSpaceManagement.setText("Park Space Management");
		jButtonParkSpaceManagement
				.setFont(jButtonParkSpaceManagement.getFont().deriveFont(
						jButtonParkSpaceManagement.getFont().getSize() + 2f));
		jButtonParkSpaceManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonParkSpaceManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel.add(jButtonParkSpaceManagement, gridBagConstraints);

		jButtonChargeScheduleManagement.setText("Charge Schedule Management");
		jButtonChargeScheduleManagement
				.setFont(jButtonChargeScheduleManagement.getFont()
						.deriveFont(
								jButtonChargeScheduleManagement.getFont()
										.getSize() + 2f));
		jButtonChargeScheduleManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonChargeScheduleManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel
				.add(jButtonChargeScheduleManagement, gridBagConstraints);

		jButtonBillManagement.setText("Bill Management");
		jButtonBillManagement.setFont(jButtonBillManagement.getFont()
				.deriveFont(jButtonBillManagement.getFont().getSize() + 2f));
		jButtonBillManagement
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButtonBillManagementActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		managementPanel.add(jButtonBillManagement, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 100;
		gridBagConstraints.ipady = 100;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.33;
		gridBagConstraints.weighty = 0.8;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(managementPanel, gridBagConstraints);

		maintainPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Maintain"));
		maintainPanel.setFont(maintainPanel.getFont().deriveFont(
				maintainPanel.getFont().getSize() + 2f));
		maintainPanel.setLayout(new java.awt.GridBagLayout());

		jButton_StatsBill.setText("Stats Bills");
		jButton_StatsBill.setFont(jButton_StatsBill.getFont().deriveFont(
				jButton_StatsBill.getFont().getSize() + 2f));
		jButton_StatsBill
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_StatsBillActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		maintainPanel.add(jButton_StatsBill, gridBagConstraints);

		dataMaintainPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("DataMaintain"));
		dataMaintainPanel.setFont(dataMaintainPanel.getFont().deriveFont(
				dataMaintainPanel.getFont().getSize() + 2f));
		dataMaintainPanel.setLayout(new java.awt.GridBagLayout());

		jButton_CollectCash.setText("Collect Cash");
		jButton_CollectCash
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_CollectCashActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		dataMaintainPanel.add(jButton_CollectCash, gridBagConstraints);

		jButton_EmptyBill.setText("Add Empty Bill");
		jButton_EmptyBill.setFont(jButton_EmptyBill.getFont().deriveFont(
				jButton_EmptyBill.getFont().getSize() + 2f));
		jButton_EmptyBill
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_EmptyBillActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		dataMaintainPanel.add(jButton_EmptyBill, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.4;
		maintainPanel.add(dataMaintainPanel, gridBagConstraints);

		monthlyBillPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("MonthlyBill"));
		monthlyBillPanel.setFont(monthlyBillPanel.getFont().deriveFont(
				monthlyBillPanel.getFont().getSize() + 2f));
		monthlyBillPanel.setLayout(new java.awt.GridBagLayout());

		jButton_MonthlyBill.setText("Generate & Send Monthly Bill");
		jButton_MonthlyBill
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_MonthlyBillActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		monthlyBillPanel.add(jButton_MonthlyBill, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.4;
		maintainPanel.add(monthlyBillPanel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 100;
		gridBagConstraints.ipady = 100;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.33;
		gridBagConstraints.weighty = 0.8;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(maintainPanel, gridBagConstraints);

		businessPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Business"));
		businessPanel.setFont(businessPanel.getFont().deriveFont(
				businessPanel.getFont().getSize() + 2f));
		businessPanel.setLayout(new java.awt.GridBagLayout());

		EnterancePanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Enterance"));
		EnterancePanel.setFont(EnterancePanel.getFont().deriveFont(
				EnterancePanel.getFont().getSize() + 2f));
		EnterancePanel.setLayout(new java.awt.GridBagLayout());

		jButton_OpenNewEnterance.setText("Open New Enterance");
		jButton_OpenNewEnterance
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_OpenNewEnteranceActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		EnterancePanel.add(jButton_OpenNewEnterance, gridBagConstraints);

		jButton_CloseAllEnterance.setText("Close All Enterance");
		jButton_CloseAllEnterance
				.setFont(jButton_CloseAllEnterance.getFont().deriveFont(
						jButton_CloseAllEnterance.getFont().getSize() + 2f));
		jButton_CloseAllEnterance
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_CloseAllEnteranceActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		EnterancePanel.add(jButton_CloseAllEnterance, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.33;
		businessPanel.add(EnterancePanel, gridBagConstraints);

		TollboothPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Tollbooth"));
		TollboothPanel.setFont(TollboothPanel.getFont().deriveFont(
				TollboothPanel.getFont().getSize() + 2f));
		TollboothPanel.setLayout(new java.awt.GridBagLayout());

		jButton_OpenAllTollbooth.setText("Open All Tollbooth");
		jButton_OpenAllTollbooth.setFont(jButton_OpenAllTollbooth.getFont()
				.deriveFont(jButton_OpenAllTollbooth.getFont().getSize() + 2f));
		jButton_OpenAllTollbooth
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_OpenAllTollboothActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		TollboothPanel.add(jButton_OpenAllTollbooth, gridBagConstraints);

		jButton_CloseAllTollbooth.setText("Close All Tollbooth");
		jButton_CloseAllTollbooth
				.setFont(jButton_CloseAllTollbooth.getFont().deriveFont(
						jButton_CloseAllTollbooth.getFont().getSize() + 2f));
		jButton_CloseAllTollbooth
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_CloseAllTollboothActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		TollboothPanel.add(jButton_CloseAllTollbooth, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.33;
		businessPanel.add(TollboothPanel, gridBagConstraints);

		ExitPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Exit"));
		ExitPanel.setFont(ExitPanel.getFont().deriveFont(
				ExitPanel.getFont().getSize() + 2f));
		ExitPanel.setLayout(new java.awt.GridBagLayout());

		jButton_OpenNewExit.setText("Open New Exit");
		jButton_OpenNewExit.setFont(jButton_OpenNewExit.getFont().deriveFont(
				jButton_OpenNewExit.getFont().getSize() + 2f));
		jButton_OpenNewExit
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_OpenNewExitActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		ExitPanel.add(jButton_OpenNewExit, gridBagConstraints);

		jButton_CloseAllExit.setText("Close All Exit");
		jButton_CloseAllExit.setFont(jButton_CloseAllExit.getFont().deriveFont(
				jButton_CloseAllExit.getFont().getSize() + 2f));
		jButton_CloseAllExit
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton_CloseAllExitActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		ExitPanel.add(jButton_CloseAllExit, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.33;
		businessPanel.add(ExitPanel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 100;
		gridBagConstraints.ipady = 100;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.33;
		gridBagConstraints.weighty = 0.8;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(businessPanel, gridBagConstraints);

		statePanel.setLayout(new java.awt.GridBagLayout());

		jToolBar1.setRollover(true);

		jLabel_State.setText("State");
		jLabel_State.setFont(jLabel_State.getFont().deriveFont(
				jLabel_State.getFont().getSize() + 2f));
		jToolBar1.add(jLabel_State);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		statePanel.add(jToolBar1, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.2;
		getContentPane().add(statePanel, gridBagConstraints);

		this.setTitle("Park System");
		pack();
	}// </editor-fold>

	private void jButton_StatsBillActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Stats Bill button has been clicked.");
		statsBillFrame.setVisible(true);
	}

	private void jButton_CollectCashActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Collect Cash button has been clicked.");
		JOptionPane.showMessageDialog(this, "cash :" + bManage.getCash(),
				"Collect Cash", JOptionPane.INFORMATION_MESSAGE);
		bManage.setCash(0);
	}

	private void jButton_MonthlyBillActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Gen Monthly Bill button has been clicked.");
		monthlyBillFrame.setVisible(true);
	}

	private void jButton_OpenNewExitActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Open New Exit button has been clicked.");
		if (exitCount < maxExitCount)
			exitFrame[exitCount++].setVisible(true);
		else
			System.out.println("Exit Frame reach MAX.");
	}

	private void jButton_OpenAllTollboothActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Open All Tollbooth button has been clicked.");
		jButton_CloseAllTollboothActionPerformed(evt);
		List<TollboothDataBase> tl = tManage.getToolboothList();
		tFrame = new TollboothFrame[tl.size()];
		for (int i = 0; i < tl.size(); i++) {
			tl.get(i).disp();
			tFrame[i] = new TollboothFrame(tl.get(i), bManage, chargeManage);
			tFrame[i].setVisible(tl.get(i).getStat() == 1);
		}
	}

	private void jButton_EmptyBillActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Empty Bill button has been clicked.");
		AddFrame.setVisible(true);
	}

	private void jButton_OpenNewEnteranceActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Open New Enterance button has been clicked.");
		if (enteranceCount < maxEnteranceCount)
			enterFrame[enteranceCount++].setVisible(true);
		else
			System.out.println("Enterance Frame reach MAX.");
	}

	private void jButton_CloseAllEnteranceActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Close All Enterance button has been clicked.");
		for (int i = 0; i < maxEnteranceCount; i++)
			enterFrame[i].setVisible(false);
		enteranceCount = 0;
	}

	private void jButton_CloseAllTollboothActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Close All Tollbooth button has been clicked.");
		for (int i = 0; i < tFrame.length; i++)
			if (tFrame[i] != null)
				tFrame[i].setVisible(false);
	}

	private void jButton_CloseAllExitActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Close All Exit button has been clicked.");
		for (int i = 0; i < maxExitCount; i++)
			exitFrame[i].setVisible(false);
		exitCount = 0;
	}

	private void jButtonEmployeeManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Button Employee Management has been clicked!");
		employeeManageFrame.setVisible(true);
	}

	private void jButtonCarManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Button CarManagement has been clicked!");
		carManageFrame.setVisible(true);
	}

	private void jButtonParkSpaceManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Button Park Space Management has been clicked!");
		pSpaceManageFrame.setVisible(true);
	}

	private void jButtonTollboothManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Button Tollbooth Management has been clicked!");
		tManageFrame.setVisible(true);
	}

	private void jButtonBillManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Bill Management has been clicked!");
		BillManageFrame.setVisible(true);
	}

	private void jButtonChargeTimeManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Button Charge Time Management has been clicked!");
		cTimeManageFrame.setVisible(true);
	}

	private void jButtonChargeScheduleManagementActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out
				.println("Button Charge Schedule Management has been clicked!");
		cScheduleManageFrame.setVisible(true);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Create and display the form */
		JFrame main = new ParkFrame();
		main.setVisible(true);
	}

	public boolean saveConfig() {

		File cFile = new File(filePath);
		if (cFile.exists() == true) {
			// if file exists , delete it!
			System.out.println("config File Exists!");
			if (cFile.delete() == true)
				System.out.println("config File Delete Success!");
			else {
				System.out.println("config File Delete Fail!");
				return false;
			}
		}
		FileWriter Writer;
		try {
			Writer = new FileWriter(filePath, true);
			BufferedWriter bufferedWriter = new BufferedWriter(Writer);
			bufferedWriter.write("maxEnteranceCount" + "="
					+ String.valueOf(maxEnteranceCount) + "\n");
			bufferedWriter.write("maxExitCount" + "="
					+ String.valueOf(maxExitCount) + "\n");
			bufferedWriter.write("maxTollboothCount" + "="
					+ String.valueOf(maxTollboothCount) + "\n");
			bufferedWriter.write("enteranceCount" + "="
					+ String.valueOf(enteranceCount) + "\n");
			bufferedWriter.write("exitCount" + "=" + String.valueOf(exitCount)
					+ "\n");
			bufferedWriter.close();
			System.out.println("config Save Success!");
			return true;
		} catch (IOException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
		return false;
	}

	public boolean getConfig() {
		File cFile = new File(filePath);
		Map<String, String> m = new HashMap<String, String>();
		if (cFile.exists() == true) {
			FileReader reader;
			try {
				reader = new FileReader(filePath);
				BufferedReader bufferedReader = new BufferedReader(reader);
				String line = null;
				while ((line = bufferedReader.readLine()) != null) {
					m.put(line.split("=")[0], line.split("=")[1]);
				}
				bufferedReader.close();
				System.out.println("config Data Read Success!");
				maxEnteranceCount = Integer
						.parseInt(m.get("maxEnteranceCount"));
				maxExitCount = Integer.parseInt(m.get("maxExitCount"));
				maxTollboothCount = Integer
						.parseInt(m.get("maxTollboothCount"));
				enteranceCount = Integer.parseInt(m.get("enteranceCount"));
				exitCount = Integer.parseInt(m.get("exitCount"));
				return true;
			} catch (FileNotFoundException e) {
				// TODO 自动生成的 catch 块
				e.printStackTrace();
			} catch (IOException e) {
				// TODO 自动生成的 catch 块
				e.printStackTrace();
			}
		} else {
			System.out.println("Car Data File NOT Exists!");
			return false;
		}
		return false;

	}

	protected void finalize() {
		save();
	}

	public void save() {
		this.bManage.saveAllBillDataToFile();
		this.carManage.saveCarDataToFile();
		this.chargeManage.saveAllDataToFile();
		this.eManage.saveEmploreeDataToFile();
		this.pManage.saveParkSpaceDataToFile();
		this.tManage.saveTollboothDataToFile();
		saveConfig();

	}

	// Variables declaration - do not modify
	private javax.swing.JPanel EnterancePanel;
	private javax.swing.JPanel ExitPanel;
	private javax.swing.JPanel TollboothPanel;
	private javax.swing.JPanel businessPanel;
	private javax.swing.JPanel dataMaintainPanel;
	private javax.swing.JButton jButtonCarManagement;
	private javax.swing.JButton jButtonChargeScheduleManagement;
	private javax.swing.JButton jButtonChargeTimeManagement;
	private javax.swing.JButton jButtonEmployeeManagement;
	private javax.swing.JButton jButtonParkSpaceManagement;
	private javax.swing.JButton jButtonTollboothManagement;
	private javax.swing.JButton jButtonBillManagement;
	private javax.swing.JButton jButton_CloseAllEnterance;
	private javax.swing.JButton jButton_CloseAllExit;
	private javax.swing.JButton jButton_CloseAllTollbooth;
	private javax.swing.JButton jButton_CollectCash;
	private javax.swing.JButton jButton_EmptyBill;
	private javax.swing.JButton jButton_MonthlyBill;
	private javax.swing.JButton jButton_OpenNewEnterance;
	private javax.swing.JButton jButton_OpenNewExit;
	private javax.swing.JButton jButton_OpenAllTollbooth;
	private javax.swing.JButton jButton_StatsBill;
	private javax.swing.JLabel jLabel_State;
	private javax.swing.JToolBar jToolBar1;
	private javax.swing.JPanel maintainPanel;
	private javax.swing.JPanel managementPanel;
	private javax.swing.JPanel monthlyBillPanel;
	private javax.swing.JPanel statePanel;
	private BillManagement bManage;
	private CarManagement carManage;
	private ChargeManagement chargeManage;
	private EmployeeManagement eManage;
	private ParkSpaceManagement pManage;
	private TollboothMangement tManage;
	private String filePath = "config.dat";
	private int maxEnteranceCount;
	private int maxExitCount;
	private int maxTollboothCount;
	private int enteranceCount;
	private int exitCount;
	private JFrame AddFrame;
	private JFrame BillManageFrame;
	private JFrame carManageFrame;
	private JFrame cScheduleFrame;
	private JFrame cScheduleManageFrame;
	private JFrame cTimeManageFrame;
	private JFrame employeeManageFrame;
	private JFrame monthlyBillFrame;
	private JFrame pSpaceManageFrame;
	private JFrame remainingFrame;
	private JFrame statsBillFrame;
	private JFrame tManageFrame;
	private JFrame[] enterFrame;
	private JFrame[] exitFrame;
	private JFrame[] tFrame;
	private Timer t;
	// End of variables declaration
}
