/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package main.ui;

import java.awt.Dimension;
import java.awt.Toolkit;

import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

import main.business.ChargeManagement;
import main.business.TimeSchedule;

/**
 *
 * @author jiang_yq
 */
public class ChargeTimeManagementFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7892461388963322416L;

	/**
	 * Creates new form ChargeTimeFrame
	 */
	public ChargeTimeManagementFrame() {
		/* Set the Nimbus look and feel */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Metal".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		cManage = new ChargeManagement();
		week = cManage.getWeekData();
		initComponents();
	}

	public ChargeTimeManagementFrame(ChargeManagement cManage) {
		/* Set the Nimbus look and feel */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Metal".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(
					ChargeTimeManagementFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		this.cManage = cManage;
		week = cManage.getWeekData();
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "serial" })
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		jPanelButton = new javax.swing.JPanel();
		jButtonAdd = new javax.swing.JButton();
		jButtonSave = new javax.swing.JButton();
		jButtonDelete = new javax.swing.JButton();
		jButtonRefresh = new javax.swing.JButton();
		jButtonExit = new javax.swing.JButton();
		jPanelWeek = new javax.swing.JPanel();
		jCheckBox0 = new javax.swing.JCheckBox();
		jCheckBox1 = new javax.swing.JCheckBox();
		jCheckBox2 = new javax.swing.JCheckBox();
		jCheckBox3 = new javax.swing.JCheckBox();
		jCheckBox4 = new javax.swing.JCheckBox();
		jCheckBox5 = new javax.swing.JCheckBox();
		jCheckBox6 = new javax.swing.JCheckBox();
		jLabelWeek = new javax.swing.JLabel();
		jPanelDays = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableData = new javax.swing.JTable();
		jLabel1 = new javax.swing.JLabel();
		jLabelTips = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		getContentPane().setLayout(new java.awt.GridBagLayout());

		jPanelButton.setLayout(new java.awt.GridBagLayout());

		jButtonAdd.setText("Add");
		jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonAddActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelButton.add(jButtonAdd, gridBagConstraints);

		jButtonSave.setText("Save");
		jButtonSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonSaveActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelButton.add(jButtonSave, gridBagConstraints);

		jButtonDelete.setText("Delete");
		jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonDeleteActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelButton.add(jButtonDelete, gridBagConstraints);

		jButtonRefresh.setText("Refresh");
		jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonRefreshActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelButton.add(jButtonRefresh, gridBagConstraints);

		jButtonExit.setText("Exit");
		jButtonExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonExitActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelButton.add(jButtonExit, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.4;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
		getContentPane().add(jPanelButton, gridBagConstraints);

		jPanelWeek.setLayout(new java.awt.GridBagLayout());

		jCheckBox0.setText("Sun.");
		jCheckBox0.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox0ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox0, gridBagConstraints);

		jCheckBox1.setText("Mon.");
		jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox1ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox1, gridBagConstraints);

		jCheckBox2.setText("Tues.");
		jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox2ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox2, gridBagConstraints);

		jCheckBox3.setText("Wed.");
		jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox3ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox3, gridBagConstraints);

		jCheckBox4.setText("Thur.");
		jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox4ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox4, gridBagConstraints);

		jCheckBox5.setText("Fri.");
		jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox5ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox5, gridBagConstraints);

		jCheckBox6.setText("Sat.");
		jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox6ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jCheckBox6, gridBagConstraints);

		jLabelWeek.setText("week");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 0.1;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelWeek.add(jLabelWeek, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.5;
		gridBagConstraints.weighty = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
		getContentPane().add(jPanelWeek, gridBagConstraints);

		jPanelDays.setLayout(new java.awt.GridBagLayout());

		jTableData.setModel(new DefaultTableModel(cManage.getTimeCellData(),
				cManage.getTimeColumnNames()) {
			@SuppressWarnings("rawtypes")
			Class[] types = new Class[] { java.lang.String.class };

			@SuppressWarnings({ "rawtypes", "unchecked" })
			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane1.setViewportView(jTableData);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.9;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelDays.add(jScrollPane1, gridBagConstraints);

		jLabel1.setText("Public Open Day:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanelDays.add(jLabel1, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 1;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
		gridBagConstraints.weightx = 0.5;
		gridBagConstraints.weighty = 0.5;
		getContentPane().add(jPanelDays, gridBagConstraints);

		jLabelTips
				.setText("<html>Trips:&nbsp;Press Edit Button after edit to update data."
						+ "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
						+ "Press Delete Button to delete the selected data. "
						+ "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
						+ "repetition data will be ignored.</html> ");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 10;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.weightx = 1;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
		getContentPane().add(jLabelTips, gridBagConstraints);

		jCheckBox0.setSelected(week[0]);
		jCheckBox1.setSelected(week[1]);
		jCheckBox2.setSelected(week[2]);
		jCheckBox3.setSelected(week[3]);
		jCheckBox4.setSelected(week[4]);
		jCheckBox5.setSelected(week[5]);
		jCheckBox6.setSelected(week[6]);
		Toolkit kit = Toolkit.getDefaultToolkit();
		Dimension screenSize = kit.getScreenSize();
		int screenWidth = screenSize.width;
		int screenHeight = screenSize.height;
		setSize(screenWidth / 6, screenHeight / 6);
		setLocationByPlatform(true);
		this.setTitle("Charge Time");

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonSaveActionPerformed
		// TODO add your handling code here:
		System.out.println("Button Save has been clicked!");
		week[0] = jCheckBox0.isSelected();
		week[1] = jCheckBox1.isSelected();
		week[2] = jCheckBox2.isSelected();
		week[3] = jCheckBox3.isSelected();
		week[4] = jCheckBox4.isSelected();
		week[5] = jCheckBox5.isSelected();
		week[6] = jCheckBox6.isSelected();
		DefaultTableModel tableModel = (DefaultTableModel) this.jTableData
				.getModel();
		int rowCount = tableModel.getRowCount();
		this.cManage.clearOpenDay();
		for (int i = 0; i < rowCount; i++) {
			String s = (String) tableModel.getValueAt(i, 0);
			if (s.length() != 10)
				continue;
			else
				this.cManage.addOpenDay(s);
		}
		this.cManage.saveTimeDataToFile();
	}// GEN-LAST:event_jButtonSaveActionPerformed

	private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonAddActionPerformed
		// TODO add your handling code here:
		System.out.println("Button Add has been clicked!");
		DefaultTableModel tableModel = (DefaultTableModel) this.jTableData
				.getModel();
		tableModel.addRow(TimeSchedule.getNewData());
	}// GEN-LAST:event_jButtonAddActionPerformed

	private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonDeleteActionPerformed
		// TODO add your handling code here:
		System.out.println("Button Delete has been clicked!");
		DefaultTableModel tableModel = (DefaultTableModel) this.jTableData
				.getModel();
		while (this.jTableData.getSelectedRowCount() != 0) {
			tableModel.removeRow(this.jTableData.getSelectedRow());
		}
	}// GEN-LAST:event_jButtonDeleteActionPerformed

	@SuppressWarnings("serial")
	private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonRefreshActionPerformed
		// TODO add your handling code here:
		System.out.println("Button Refresh has been clicked!");
		for (boolean a : week)
			System.out.println(a);
		week = cManage.getWeekData();
		System.out.println("after");
		for (boolean a : week)
			System.out.println(a);
		jCheckBox0.setSelected(week[0]);
		jCheckBox1.setSelected(week[1]);
		jCheckBox2.setSelected(week[2]);
		jCheckBox3.setSelected(week[3]);
		jCheckBox4.setSelected(week[4]);
		jCheckBox5.setSelected(week[5]);
		jCheckBox6.setSelected(week[6]);
		jTableData.setModel(new DefaultTableModel(cManage.getTimeCellData(),
				cManage.getTimeColumnNames()) {
			@SuppressWarnings("rawtypes")
			Class[] types = new Class[] { java.lang.String.class };

			@SuppressWarnings({ "rawtypes", "unchecked" })
			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane1.setViewportView(jTableData);

	}// GEN-LAST:event_jButtonRefreshActionPerformed

	private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonExitActionPerformed
		// TODO add your handling code here:
		this.cManage.saveTimeDataToFile();
		System.out.println("Button Exit has been clicked!");
		this.dispose();
	}// GEN-LAST:event_jButtonExitActionPerformed

	private void jCheckBox0ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox0ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box0 has been clicked!");
		week[0] = jCheckBox0.isSelected();
	}// GEN-LAST:event_jCheckBox0ActionPerformed

	private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox1ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box1 has been clicked!");
		week[1] = jCheckBox1.isSelected();
	}// GEN-LAST:event_jCheckBox1ActionPerformed

	private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox2ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box2 has been clicked!");
		week[2] = jCheckBox2.isSelected();
	}// GEN-LAST:event_jCheckBox2ActionPerformed

	private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox3ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box3 has been clicked!");
		week[3] = jCheckBox3.isSelected();
	}// GEN-LAST:event_jCheckBox3ActionPerformed

	private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox4ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box4 has been clicked!");
		week[4] = jCheckBox4.isSelected();
	}// GEN-LAST:event_jCheckBox4ActionPerformed

	private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox5ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box5 has been clicked!");
		week[5] = jCheckBox5.isSelected();
	}// GEN-LAST:event_jCheckBox5ActionPerformed

	private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox6ActionPerformed
		// TODO add your handling code here:
		System.out.println("Button box6 has been clicked!");
		week[6] = jCheckBox6.isSelected();
	}// GEN-LAST:event_jCheckBox6ActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ChargeTimeManagementFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButtonAdd;
	private javax.swing.JButton jButtonDelete;
	private javax.swing.JButton jButtonExit;
	private javax.swing.JButton jButtonRefresh;
	private javax.swing.JButton jButtonSave;
	private javax.swing.JCheckBox jCheckBox0;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JCheckBox jCheckBox3;
	private javax.swing.JCheckBox jCheckBox4;
	private javax.swing.JCheckBox jCheckBox5;
	private javax.swing.JCheckBox jCheckBox6;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabelWeek;
	private javax.swing.JPanel jPanelButton;
	private javax.swing.JPanel jPanelDays;
	private javax.swing.JPanel jPanelWeek;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableData;
	private JLabel jLabelTips;
	private ChargeManagement cManage;
	private boolean[] week;
	// End of variables declaration//GEN-END:variables
}
