/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.ui;

import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import main.basedata.BillDataBase;
import main.basedata.TollboothDataBase;
import main.business.ChargeManagement;
import main.maintain.BillManagement;

/**
 *
 * @author jiang_yq
 */
public class TollboothFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7199912903109278896L;

	/**
	 * Creates new form PaymentFrame
	 */
	public TollboothFrame() {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Metal".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		tDat = new TollboothDataBase();
		tDat.setMode("nocharge");
		bManage = new BillManagement();
		cManage = new ChargeManagement();
		initComponents();
		jTextFieldExitID.setText(String.valueOf(tDat.getLocality()));
		jTextFieldStat.setText(tDat.getStat() == 0 ? "CLOSE" : "OPEN");
	}

	public TollboothFrame(TollboothDataBase t, BillManagement bm,
			ChargeManagement cm) {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Metal".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(RemainingFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		tDat = t;
		bManage = bm;
		cManage = cm;
		initComponents();
		jTextFieldExitID.setText(String.valueOf(tDat.getLocality()));
		jTextFieldStat.setText(tDat.getStat() == 0 ? "CLOSE" : "OPEN");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		buttonGroup_Payment = new javax.swing.ButtonGroup();
		jLabel_Tips = new javax.swing.JLabel();
		jButtonPay = new javax.swing.JButton();
		jTextLicense = new javax.swing.JTextField();
		jPanel1 = new javax.swing.JPanel();
		jRadioButton_Cash = new javax.swing.JRadioButton();
		jRadioButton_VISA = new javax.swing.JRadioButton();
		jRadioButton_Ticket = new javax.swing.JRadioButton();
		jRadioButton_Employee = new JRadioButton();
		jLabelID = new javax.swing.JLabel();
		jTextFieldExitID = new javax.swing.JTextField();
		jLabelStat = new javax.swing.JLabel();
		jTextFieldStat = new javax.swing.JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		getContentPane().setLayout(new java.awt.GridBagLayout());

		jLabel_Tips.setFont(jLabel_Tips.getFont().deriveFont(
				jLabel_Tips.getFont().getSize() + 5f));
		jLabel_Tips.setText("input your parking bill id or car license:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(jLabel_Tips, gridBagConstraints);

		jButtonPay.setFont(jButtonPay.getFont().deriveFont(
				jButtonPay.getFont().getSize() + 30f));
		jButtonPay.setText("pay");
		jButtonPay.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonPayActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.4;
		gridBagConstraints.weighty = 0.6;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(jButtonPay, gridBagConstraints);

		jTextLicense.setFont(jTextLicense.getFont().deriveFont(
				jTextLicense.getFont().getSize() + 10f));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 100;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(jTextLicense, gridBagConstraints);

		jPanel1.setLayout(new java.awt.GridBagLayout());

		buttonGroup_Payment.add(jRadioButton_Cash);
		jRadioButton_Cash.setFont(jRadioButton_Cash.getFont().deriveFont(
				jRadioButton_Cash.getFont().getSize() + 10f));
		jRadioButton_Cash.setText("Cash");
		jRadioButton_Cash.setSelected(true);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.4;
		gridBagConstraints.weighty = 0.33;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanel1.add(jRadioButton_Cash, gridBagConstraints);

		buttonGroup_Payment.add(jRadioButton_VISA);
		jRadioButton_VISA.setFont(jRadioButton_VISA.getFont().deriveFont(
				jRadioButton_VISA.getFont().getSize() + 10f));
		jRadioButton_VISA.setText("VISA");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.33;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanel1.add(jRadioButton_VISA, gridBagConstraints);

		buttonGroup_Payment.add(jRadioButton_Employee);
		jRadioButton_Employee.setFont(jRadioButton_Employee.getFont()
				.deriveFont(jRadioButton_Employee.getFont().getSize() + 10f));
		jRadioButton_Employee.setText("Employee");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.33;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanel1.add(jRadioButton_Employee, gridBagConstraints);

		buttonGroup_Payment.add(jRadioButton_Ticket);
		jRadioButton_Ticket.setFont(jRadioButton_Ticket.getFont().deriveFont(
				jRadioButton_Ticket.getFont().getSize() + 10f));
		jRadioButton_Ticket.setText("Ticket");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.33;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		jPanel1.add(jRadioButton_Ticket, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridheight = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.4;
		gridBagConstraints.weighty = 0.6;
		gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
		getContentPane().add(jPanel1, gridBagConstraints);

		jLabelID.setFont(jLabelID.getFont().deriveFont(
				jLabelID.getFont().getSize() + 10f));
		jLabelID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabelID.setText("Tollbooth ID:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.3;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		getContentPane().add(jLabelID, gridBagConstraints);

		jTextFieldExitID.setEditable(false);
		jTextFieldExitID.setFont(jTextFieldExitID.getFont().deriveFont(
				jTextFieldExitID.getFont().getSize() + 10f));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.7;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		getContentPane().add(jTextFieldExitID, gridBagConstraints);

		jLabelStat.setFont(jLabelStat.getFont().deriveFont(
				jLabelStat.getFont().getSize() + 25f));
		jLabelStat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabelStat.setText("Stat:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.2;
		gridBagConstraints.weighty = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		getContentPane().add(jLabelStat, gridBagConstraints);

		jTextFieldStat.setEditable(false);
		jTextFieldStat.setFont(jTextFieldStat.getFont().deriveFont(
				jTextFieldStat.getFont().getSize() + 10f));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 0.7;
		gridBagConstraints.weighty = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		getContentPane().add(jTextFieldStat, gridBagConstraints);

		this.setTitle("Tollbooth");
		pack();
	}// </editor-fold>

	private void jButtonPayActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.out.println("Button Tollbooth has been clicked.");
		if (jTextLicense.getText().isEmpty()) {
			return;
		}
		BillDataBase bDat = new BillDataBase();
		int billID;
		try {
			billID = Integer.parseInt(jTextLicense.getText());
			bDat = bManage.getBillByBillID(billID);
		} catch (Exception e) {
			bDat = bManage.getBillByLicense(jTextLicense.getText());
		}

		if (bDat == null) {
			System.out.println("No this bill.");
			return;
		}
		bDat.setLeaveTime(new Date());
		double charge = cManage.getCharge(bDat.getDuringTime());
		// System.out.println(charge);
		if (bDat.isEmployee()) {
			if (!jRadioButton_Employee.isSelected())
				JOptionPane
						.showMessageDialog(
								this,
								"This BIll is An Employee Bill! \nPlease Choose employee Pay Mode.",
								"Pay Mode Error", JOptionPane.ERROR_MESSAGE);
			else {
				bDat.setCount(0);
				bDat.setStat("employee");
				JOptionPane.showMessageDialog(
						this,
						"Employee Bill. Recorded Success.\nBill ID: "
								+ bDat.getBillID(), "Employee Record",
						JOptionPane.CLOSED_OPTION);
			}
		} else {
			if (jRadioButton_Cash.isSelected() && !bDat.isEmployee()) {
				System.out.println("Cash.");
				String inputPenny = JOptionPane.showInputDialog(this, "Cost : "
						+ (charge < 100 ? charge + " p" : "£ "
								+ (int) (charge / 100) + " and " + charge % 100
								+ "p") + "\nInput Cash Count: (by 50 penny)",
						"");
				String inputPound1 = JOptionPane.showInputDialog(this,
						"Cost : "
								+ (charge < 100 ? charge + " p" : "£ "
										+ (int) (charge / 100) + " and "
										+ charge % 100 + "p")
								+ "\nInput Cash Count: (by 1 pound)", "");
				String inputPound2 = JOptionPane.showInputDialog(this,
						"Cost : "
								+ (charge < 100 ? charge + " p" : "£ "
										+ (int) (charge / 100) + " and "
										+ charge % 100 + "p")
								+ "\nInput Cash Count: (by 2 pound)", "");
				double pay = 0;
				if (inputPenny != null)
					pay += Integer.parseInt(inputPenny) * 50;
				if (inputPound1 != null)
					pay += Integer.parseInt(inputPound1) * 100;
				if (inputPound2 != null)
					pay += Integer.parseInt(inputPound2) * 200;

				double back = pay - charge;
				if (back < 0) {
					JOptionPane.showMessageDialog(this, "Insufficient Fund!",
							"Insufficient Fund", JOptionPane.ERROR_MESSAGE);
					return;
				}
				bDat.setStat("paid");
				bDat.setPayMode(2);
				if (tDat.getMode() == 1) {
					bManage.addCash(charge);
					bDat.setCount(charge);
					int penny;
					int pound1;
					int pound2;
					pound2 = (int) back / 200;
					pound1 = (int) back % 200 / 100;
					penny = (int) back % 100 / 50;
					JOptionPane.showMessageDialog(this,
							"Pay Bill Success!\nBill ID: " + bDat.getBillID()
									+ "Charge:\n" + " £ 2: " + pound2
									+ "\n £ 1: " + pound1 + "\n 50 penny: "
									+ penny, "Success",
							JOptionPane.CLOSED_OPTION);
				} else {
					bManage.addCash(pay);
					bDat.setCount(pay);
					JOptionPane.showMessageDialog(this,
							"Pay Bill Success!\nBill ID: "
									+ bDat.getBillID()
									+ " \nTotal Pay: "
									+ (pay < 100 ? pay + " p" : "£ "
											+ (int) (pay / 100) + " and " + pay
											% 100 + "p"), "Success",
							JOptionPane.CLOSED_OPTION);
				}

			} else if (jRadioButton_VISA.isSelected() && !bDat.isEmployee()) {
				String input = JOptionPane.showInputDialog(this,
						"Input VISA NO:  ", "");
				if (input != null) {
					bDat.setStat("paid");
					bDat.setPayMode(1);
					bDat.setCount(charge);
					JOptionPane.showMessageDialog(
							this,
							"Pay Bill By VISA Success! Bill ID: "
									+ bDat.getBillID(), "Success",
							JOptionPane.CLOSED_OPTION);
				} else {
					JOptionPane.showMessageDialog(this,
							"Pay Bill By Ticket Fail!", "Success",
							JOptionPane.CLOSED_OPTION);
				}
			} else if (jRadioButton_Ticket.isSelected() && !bDat.isEmployee()) {
				String input = JOptionPane.showInputDialog(this,
						"Input Ticket NO:", "");
				if (input != null) {
					bDat.setStat("paid");
					bDat.setPayMode(0);
					bDat.setCount(charge);
					JOptionPane.showMessageDialog(
							this,
							"Pay Bill By Ticket Success! Bill ID: "
									+ bDat.getBillID(), "Success",
							JOptionPane.CLOSED_OPTION);
				} else {
					JOptionPane.showMessageDialog(this,
							"Pay Bill By Ticket Fail!", "Success",
							JOptionPane.CLOSED_OPTION);
				}
			} else {
				JOptionPane
						.showMessageDialog(
								this,
								"This BIll is NOT An Employee Bill! \nPlease Choose other Pay Mode.",
								"Pay Mode Error", JOptionPane.ERROR_MESSAGE);
			}
		}
		if (bManage.moveFromListToPaidList(bDat.getBillID()))
			System.out.println("Move Bill success.");

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		new TollboothFrame().setVisible(true);
	}

	// Variables declaration - do not modify
	private javax.swing.ButtonGroup buttonGroup_Payment;
	private javax.swing.JButton jButtonPay;
	private javax.swing.JLabel jLabelID;
	private javax.swing.JLabel jLabelStat;
	private javax.swing.JLabel jLabel_Tips;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JRadioButton jRadioButton_Cash;
	private javax.swing.JRadioButton jRadioButton_Ticket;
	private javax.swing.JRadioButton jRadioButton_VISA;
	private javax.swing.JRadioButton jRadioButton_Employee;
	private javax.swing.JTextField jTextFieldExitID;
	private javax.swing.JTextField jTextFieldStat;
	private javax.swing.JTextField jTextLicense;
	private TollboothDataBase tDat;
	private BillManagement bManage;
	private ChargeManagement cManage;
	// End of variables declaration
}
//